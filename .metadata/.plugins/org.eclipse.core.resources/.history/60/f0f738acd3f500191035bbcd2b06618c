package o1.rainfall

import scala.io.StdIn._

object RainfallApp extends App {

  def averageRainfall(vek: Vector[Int]) = { //vähän hutioloitu täällä
    val montako = (vek.takeWhile( _ != 999999).filter( _ >= 0).length)
    val kuiMonta = vek.takeWhile( _ != 999999).filter( _ >= 0).reduceLeftOption(_ + _)
    kuiMonta match {
      case Some(jotai) => Some((vek.takeWhile( _ != 999999).filter( _ >= 0).sum / montako))
      case None => "No valid data. Cannot compute average."
    }
    
  }
  
  val kys = Stream.continually( readLine("Enter rainfall (or 999999 to stop): ")toInt )toVector
  averageRainfall(this.kys)
}